{"version":3,"sources":["app/routes.js","features/topics/topicsSlice.js","features/quizzes/quizzesSlice.js","features/cards/cardsSlice.js","components/NewQuizForm.js","data/icons.js","components/NewTopicForm.js","features/topics/Topics.js","features/topics/Topic.js","features/cards/Card.js","features/quizzes/Quiz.js","features/quizzes/Quizzes.js","app/App.js","app/store.js","index.js"],"names":["ROUTES","newQuizRoute","quizRoute","id","quizzesRoute","newTopicRoute","topicRoute","topicsRoute","topicsSlice","createSlice","name","initialState","topics","reducers","addTopic","state","action","payload","icon","quizIds","addQuizId","quizId","topicId","push","selectTopics","actions","quizzesSlice","quizzes","addQuiz","cardIds","selectQuizzes","cardsSlice","cards","addCard","front","back","selectCards","NewQuizForm","useState","setName","setCards","setTopicId","history","useHistory","useSelector","dispatch","useDispatch","updateCardState","index","side","value","newCards","slice","onSubmit","e","preventDefault","length","console","log","map","card","cardId","uuidv4","createNewQuiz","onChange","currentTarget","placeholder","Object","values","topic","className","onClick","filter","i","removeCard","concat","ALL_ICONS","url","NewTopicForm","setIcon","type","required","defaultValue","disabled","hidden","Topics","to","src","alt","Topic","useParams","quizzesForTopic","quiz","Card","flipped","setFlipped","Quizzes","App","activeClassName","path","TopicsRoutes","QuizRoutes","match","useRouteMatch","configureStore","reducer","topicsReducer","quizzesReducer","cardsReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.419705ed.chunk.js","sourcesContent":["const ROUTES = {\n  newQuizRoute: () => \"/quizzes/new\",\n  quizRoute: (id) => `/quizzes/${id}`,\n  quizzesRoute: () => \"/quizzes\",\n  newTopicRoute: () => \"/topics/new\",\n  topicRoute: (id) => `/topics/${id}`,\n  topicsRoute: () => \"/topics\",\n};\n\nexport default ROUTES;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// {\r\n//   topics: {\r\n//     topics: {\r\n//       '123': {\r\n//         id: '123',\r\n//         name: 'example topic',\r\n//         icon: 'icon url',\r\n//         quizIds: ['456']\r\n//       }\r\n//     }\r\n//   },\r\n//   quizzes: {\r\n//     quizzes: {\r\n//       '456': {\r\n//         id: '456',\r\n//         topicId: '123',\r\n//         name: 'quiz for example topic',\r\n//         cardIds: ['789', '101', '102']\r\n//       }\r\n//     }\r\n//   },\r\n//   cards: {\r\n//     cards: {\r\n//       '789': {\r\n//         id: '789',\r\n//         front: 'front text',\r\n//         back: 'back text'\r\n//       },\r\n//       '101': {\r\n//         id: '101',\r\n//         front: 'front text',\r\n//         back: 'back text'\r\n//       },\r\n//       '102': {\r\n//         id: '102',\r\n//         front: 'front text',\r\n//         back: 'back text'\r\n//       },\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst topics = { topics: {} };\r\n\r\nconst topicsSlice = createSlice({\r\n    name: 'topics',\r\n    initialState: topics,\r\n    reducers: {\r\n      //add a topic to topics object keyed by id and add quizIds property that has a value of an empty array.\r\n      addTopic: (state, action) => {\r\n        const { id, name, icon } = action.payload\r\n        state.topics[id] = {\r\n          id,\r\n          name,\r\n          icon,\r\n          quizIds: []\r\n        }\r\n      },\r\n      //add quiz id to topics quizIds property\r\n      addQuizId: (state, action) => {\r\n        \r\n        const { quizId, topicId } = action.payload;\r\n        state.topics[topicId].quizIds.push(quizId);\r\n      }\r\n    }\r\n});\r\n\r\n\r\nexport const selectTopics = state => state.topics.topics;\r\nexport const { addTopic, addQuizId } = topicsSlice.actions;\r\nexport default topicsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { addQuizId } from '../topics/topicsSlice';\r\n\r\nconst quizzes = { quizzes: {} };\r\n\r\nexport const quizzesSlice = createSlice({\r\n    name: 'quizzes',\r\n    initialState: quizzes,\r\n    reducers: {\r\n        addQuiz: (state, action) => {\r\n            const { id, name, topicId, cardIds } = action.payload;\r\n            state.quizzes[id] = {\r\n                id,\r\n                name,\r\n                topicId,\r\n                cardIds\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const createNewQuiz = (payload) => {\r\n    const {name,topicId,cardIds,id} = payload;\r\n    return (dispatch) => {\r\n      // dispatch multiple actions here\r\n      dispatch(addQuiz({ id, name, topicId, cardIds}));\r\n      dispatch(addQuizId({ quizId: id, topicId: topicId }));\r\n    };\r\n}\r\n\r\nexport const selectQuizzes = state => state.quizzes.quizzes;\r\nexport const { addQuiz } = quizzesSlice.actions;\r\nexport default quizzesSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cards = { cards: {} };\r\n\r\nexport const cardsSlice = createSlice({\r\n    name: 'cards',\r\n    initialState: cards,\r\n    reducers: {\r\n        addCard: (state, action) => {\r\n            const { id, front, back } = action.payload;\r\n            state.cards[id] = {\r\n                id,\r\n                front,\r\n                back\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const selectCards = state => state.cards.cards;\r\nexport const { addCard } = cardsSlice.actions;\r\nexport default cardsSlice.reducer;","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { selectTopics } from \"../features/topics/topicsSlice\";\nimport { createNewQuiz } from \"../features/quizzes/quizzesSlice\";\nimport { addCard } from \"../features/cards/cardsSlice\";\n\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const history = useHistory();\n  const topics = useSelector(selectTopics);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n\n    const cardIds = [];\n\n    console.log(cardIds);\n    // create the new cards here and add each card's id to cardIds\n    // create the new quiz here\n\n    // eslint-disable-next-line array-callback-return\n    cards.map((card, index) => {\n      const cardId = uuidv4();\n      cardIds.push(cardId);\n      dispatch(addCard({\n        id: cardId,\n        front: cards[index].front,\n        back: cards[index].back\n      }));\n    });\n\n    dispatch(createNewQuiz({\n      name: name,\n      topicId: topicId,\n      cardIds: cardIds,\n      id: uuidv4()\n    }));\n\n    history.push(ROUTES.quizzesRoute());\n  };\n\n  const addCardInputs = (e) => {\n    e.preventDefault();\n    setCards(cards.concat({ front: \"\", back: \"\" }));\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n\n  return (\n    <section>\n      <h1>Create a new quiz</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"quiz-name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          placeholder=\"Quiz Title\"\n        />\n        <select\n          id=\"quiz-topic\"\n          onChange={(e) => setTopicId(e.currentTarget.value)}\n          placeholder=\"Topic\"\n        >\n          <option value=\"\">Topic</option>\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n        {cards.map((card, index) => (\n          <div key={index} className=\"card-front-back\">\n            <input\n              id={`card-front-${index}`}\n              value={cards[index].front}\n              onChange={(e) =>\n                updateCardState(index, \"front\", e.currentTarget.value)\n              }\n              placeholder=\"Front\"\n            />\n\n            <input\n              id={`card-back-${index}`}\n              value={cards[index].back}\n              onChange={(e) =>\n                updateCardState(index, \"back\", e.currentTarget.value)\n              }\n              placeholder=\"Back\"\n            />\n\n            <button\n              onClick={(e) => removeCard(e, index)}\n              className=\"remove-card-button\"\n            >\n              Remove Card\n            </button>\n          </div>\n        ))}\n        <div className=\"actions-container\">\n          <button onClick={addCardInputs}>Add a Card</button>\n          <button>Create Quiz</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n","export const BOOK_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/book.svg\";\nexport const BALLOON_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/balloon.svg\";\nexport const BIRD_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/bird.svg\";\nexport const CALENDAR_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/calendar.svg\";\nexport const CLOVER_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/clover.svg\";\nexport const CRAYONS_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/crayons.svg\";\nexport const DATA_FLOW_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/data-flow.svg\";\nexport const FENCE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/fence.svg\";\nexport const GRILL_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/grill.svg\";\nexport const HAND_DRILL_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/hand-drill.svg\";\nexport const HAT_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/hat.svg\";\nexport const INTERNET_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/internet.svg\";\nexport const LADYBUG_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/ladybug.svg\";\nexport const LEAVES_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/leaves.svg\";\nexport const MEDICINE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/medicine.svg\";\nexport const NEST_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/nest.svg\";\nexport const SHUTTLECOCK_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/shuttlecock.svg\";\nexport const SPADE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/spade.svg\";\nexport const STATISTICS_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/statistics.svg\";\nexport const SUN_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/sun.svg\";\nexport const TREE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/tree.svg\";\n\nexport const ALL_ICONS = [\n  {\n    url: BOOK_ICON,\n    name: \"Book\",\n  },\n  {\n    url: BALLOON_ICON,\n    name: \"Balloon\",\n  },\n  {\n    url: BIRD_ICON,\n    name: \"Bird\",\n  },\n  {\n    url: CALENDAR_ICON,\n    name: \"Calendar\",\n  },\n  {\n    url: CLOVER_ICON,\n    name: \"Clover\",\n  },\n  {\n    url: CRAYONS_ICON,\n    name: \"Crayons\",\n  },\n  {\n    url: DATA_FLOW_ICON,\n    name: \"Data\",\n  },\n  {\n    url: FENCE_ICON,\n    name: \"Fence\",\n  },\n  {\n    url: GRILL_ICON,\n    name: \"Grill\",\n  },\n  {\n    url: HAND_DRILL_ICON,\n    name: \"Hand\",\n  },\n  {\n    url: HAT_ICON,\n    name: \"Hat\",\n  },\n  {\n    url: INTERNET_ICON,\n    name: \"Internet\",\n  },\n  {\n    url: LADYBUG_ICON,\n    name: \"Ladybug\",\n  },\n  {\n    url: LEAVES_ICON,\n    name: \"Leaves\",\n  },\n  {\n    url: MEDICINE_ICON,\n    name: \"Medicine\",\n  },\n  {\n    url: NEST_ICON,\n    name: \"Nest\",\n  },\n  {\n    url: SHUTTLECOCK_ICON,\n    name: \"Shuttlecock\",\n  },\n  {\n    url: SPADE_ICON,\n    name: \"Spade\",\n  },\n  {\n    url: STATISTICS_ICON,\n    name: \"Statistics\",\n  },\n  {\n    url: SUN_ICON,\n    name: \"Sun\",\n  },\n  {\n    url: TREE_ICON,\n    name: \"Tree\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { ALL_ICONS } from \"../data/icons\";\nimport { addTopic } from \"../features/topics/topicsSlice\";\n\nexport default function NewTopicForm() {\n  const [name, setName] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n\n    // dispatch your add topic action here\n    dispatch(addTopic(\n      {\n        name: name, \n        id: uuidv4(), \n        icon: icon\n      }\n    ));\n\n    history.push(ROUTES.topicsRoute());\n  };\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <h1 className=\"center\">Create a new topic</h1>\n        <div className=\"form-section\">\n          <input\n            id=\"topic-name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.currentTarget.value)}\n            placeholder=\"Topic Name\"\n          />\n          <select\n            onChange={(e) => setIcon(e.currentTarget.value)}\n            required\n            defaultValue=\"default\"\n          >\n            <option value=\"default\" disabled hidden>\n              Choose an icon\n            </option>\n            {ALL_ICONS.map(({ name, url }) => (\n              <option key={url} value={url}>\n                {name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button className=\"center\">Add Topic</button>\n      </form>\n    </section>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport NewTopicForm from \"../../components/NewTopicForm\";\nimport { Link } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\nimport { selectTopics } from \"./topicsSlice\";\n\nexport default function Topics() {\n  const topics = useSelector(selectTopics); // replace this with a call to your selector to select all the topics in state\n  \n  return (\n    <section className=\"center\">\n      <h1>Topics</h1>\n      <ul className=\"topics-list\">\n        {Object.values(topics).map((topic) => (\n          <li className=\"topic\" key={topic.id}>\n          <Link to={ROUTES.topicRoute(topic.id)} className=\"topic-link\">\n           <div className=\"topic-container\">\n             <img src={topic.icon} alt=\"\" />\n             <div className=\"text-content\">\n               <h2>{topic.name}</h2>\n               <p>{topic.quizIds.length} Quizzes</p>\n             </div>\n           </div>\n         </Link>\n          </li>\n        ))}\n      </ul>\n      <Link\n        to={ROUTES.newTopicRoute()}\n        className=\"button create-new-topic-button\"\n      >\n        Create New Topic\n      </Link>\n    </section>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport NewTopicForm from \"../../components/NewTopicForm\";\nimport { Link, useParams } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\nimport { selectTopics } from \"./topicsSlice\";\nimport { selectQuizzes } from \"../quizzes/quizzesSlice\";\n\nexport default function Topic() {\n  const topics = useSelector(selectTopics); // replace this with a call to your selector to select all the topics in state\n  const quizzes = useSelector(selectQuizzes); // replace this with a call to your selector to select all the quizzes in state\n  let { topicId } = useParams();\n  const topic = topics[topicId];\n  const quizzesForTopic = topic.quizIds.map((quizId) => quizzes[quizId]);\n\n  return (\n    <section>\n      <img src={topic.icon} alt=\"\" className=\"topic-icon\" />\n      <h1>Topic: {topic.name}</h1>\n      <ul className=\"quizzes-list\">\n        {quizzesForTopic.map((quiz) => (\n          <li className=\"quiz\" key={quiz.id}>\n            <Link to={ROUTES.quizRoute(quiz.id)}>{quiz.name}</Link>\n          </li>\n        ))}\n      </ul>\n      <Link to=\"/quizzes/new\" className=\"button center\">\n        Create a New Quiz\n      </Link>\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { selectCards } from \"./cardsSlice\";\n\nexport default function Card({ id }) {\n  const cards = useSelector(selectCards); // replace this with a call to your selector to get all the cards in state\n  const card = cards[id];\n  const [flipped, setFlipped] = useState(false);\n\n  return (\n    <li>\n      <button className=\"card\" onClick={(e) => setFlipped(!flipped)}>\n        {flipped ? card.back : card.front}\n      </button>\n    </li>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Card from \"../cards/Card\";\nimport ROUTES from \"../../app/routes\";\nimport { selectQuizzes } from \"./quizzesSlice\";\n\nexport default function Topic() {\n  const quizzes = useSelector(selectQuizzes); // replace this with a call to your selector to get all the quizzes in state\n  let { quizId } = useParams();\n  const quiz = quizzes[quizId];\n\n  return (\n    <section>\n      <h1>{quiz.name}</h1>\n      <ul className=\"cards-list\">\n        {quiz.cardIds.map((id) => (\n          <Card key={id} id={id} />\n        ))}\n      </ul>\n      <Link to={ROUTES.newQuizRoute()} className=\"button center\">\n        Create a New Quiz\n      </Link>\n    </section>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\nimport { selectQuizzes } from \"./quizzesSlice\";\n\nexport default function Quizzes() {\n  const quizzes = useSelector(selectQuizzes); // replace this with a call to your selector to get all the quizzes in state\n  return (\n    <section className=\"center\">\n      <h1>Quizzes</h1>\n      <ul className=\"quizzes-list\">\n        {Object.values(quizzes).map((quiz) => (\n          <Link key={quiz.id} to={ROUTES.quizRoute(quiz.id)}>\n            <li className=\"quiz\">{quiz.name}</li>\n          </Link>\n        ))}\n      </ul>\n      <Link to={ROUTES.newQuizRoute()} className=\"button\">\n        Create New Quiz\n      </Link>\n    </section>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport NewQuizForm from \"../components/NewQuizForm\";\nimport NewTopicForm from \"../components/NewTopicForm\";\nimport Topics from \"../features/topics/Topics\";\nimport Topic from \"../features/topics/Topic\";\nimport Quiz from \"../features/quizzes/Quiz\";\nimport Quizzes from \"../features/quizzes/Quizzes\";\nimport ROUTES from \"./routes\";\n\nexport default function App() {\n  return (\n    <Router>\n      <nav>\n        <ul>\n          <li>\n            <NavLink to={ROUTES.topicsRoute()} activeClassName=\"active\">\n              Topics\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={ROUTES.quizzesRoute()} activeClassName=\"active\">\n              Quizzes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={ROUTES.newQuizRoute()} activeClassName=\"active\">\n              New Quiz\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n\n      <Switch>\n        <Route path=\"/topics\">\n          <TopicsRoutes />\n        </Route>\n        <Route path=\"/quizzes\">\n          <QuizRoutes />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction TopicsRoutes() {\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <Switch>\n        <Route path={`${match.path}/new`}>\n          <NewTopicForm />\n        </Route>\n        <Route path={`${match.path}/:topicId`}>\n          <Topic />\n        </Route>\n        <Route path={`${match.path}`}>\n          <Topics />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nfunction QuizRoutes() {\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <Switch>\n        <Route path={`${match.path}/new`}>\n          <NewQuizForm />\n        </Route>\n        <Route path={`${match.path}/:quizId`}>\n          <Quiz />\n        </Route>\n        <Route path={`${match.path}`}>\n          <Quizzes />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport topicsReducer from '../features/topics/topicsSlice';\nimport quizzesReducer from '../features/quizzes/quizzesSlice';\nimport cardsReducer from '../features/cards/cardsSlice';\n\nexport default configureStore({\n  reducer: {\n    topics: topicsReducer,\n    quizzes: quizzesReducer,\n    cards: cardsReducer\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app/App\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}